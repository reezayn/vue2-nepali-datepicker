// src/utils/generateDataLoader.js

const fs = require('fs')
const path = require('path')

const startYear = 1992
const endYear = 2100
let output = []

// Header comments for clarity.
output.push('// This file is auto-generated by generateDataLoader.js')
output.push('// Do not modify manually.')
output.push('')

// Loop over each year and month to generate import statements.
for (let year = startYear; year <= endYear; year++) {
  for (let month = 1; month <= 12; month++) {
    // Create a variable name like data1992_1
    const varName = `data${year}_${month}`
    // Construct the relative path (adjust if your data folder structure differs)
    const importPath = `../data/${year}/${month}.json`
    output.push(`import ${varName} from '${importPath}';`)
  }
  output.push('') // Empty line between years.
}

// Build the modules object.
output.push('export const modules = {')
for (let year = startYear; year <= endYear; year++) {
  for (let month = 1; month <= 12; month++) {
    output.push(`  "${year}/${month}": data${year}_${month},`)
  }
}
output.push('};')
output.push('')
output.push('export async function getNepaliDateData(year, month) {')
output.push('  const normalizedMonth = String(Number(month));')
output.push('  const key = `${year}/${normalizedMonth}`;')
output.push('  if (modules[key]) {')
output.push('    return modules[key];')
output.push('  } else {')
output.push(
  '    throw new Error(`Data for year ${year} and month ${month} not found.`);'
)
output.push('  }')
output.push('}')

// Write the output to dataLoader.js in the same directory as this script.
const filePath = path.join(__dirname, 'dataLoader.js')
fs.writeFileSync(filePath, output.join('\n'))
console.log('dataLoader.js generated successfully at', filePath)
